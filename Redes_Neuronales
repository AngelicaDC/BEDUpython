{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.4"
    },
    "colab": {
      "name": "Reto02.ipynb",
      "provenance": [],
      "include_colab_link": true
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/AngelicaDC/BEDUpython/blob/main/Redes_Neuronales\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "DnVFzbpUJVBn"
      },
      "source": [
        "# Ejemplo 02\n",
        "## Jaffet León Chávez\n",
        "\n",
        "El reto consta de que generes una red neuronal con solo 3 variables:\n",
        "\n",
        "### 1- Número de embarazos\n",
        "#### 2- Concentración de glucosa en la plasma sanguínea a 2 horas en una prueba oral\n",
        "#### 3- Presión sanguínea diastólica (mm Hg)\n",
        "\n",
        "Su reto es:\n",
        "- Generar una red neuronal con 2 layers de neuronas que generen una dendrita de salida binaria para clasificar los nuevos casos observados como 1 (diabético) o 0 (no diabético).\n",
        "- Probar su modelo con al menos 5 observaciones del data set que usted ya tiene\n",
        "\n",
        "Recuerde que la última variable es la dummy"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CeZVxEtPJVBq"
      },
      "source": [
        "# Librerías a usar\n",
        "\n",
        "from numpy import loadtxt\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense\n",
        "import pandas as pd\n",
        "import matplotlib as mp"
      ],
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3D35bwTbLFQ7"
      },
      "source": [
        "import seaborn as sns\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.model_selection import KFold"
      ],
      "execution_count": 33,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "YixlT7EUJVBs"
      },
      "source": [
        "# Paso 1\n",
        "Carga los datos. Use pandas para ello"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Yy45aOPCJVBt"
      },
      "source": [
        "df=pd.read_csv('https://raw.githubusercontent.com/jaffotsa/sml/main/Sesi%C3%B3n%2006.%20Redes%20Neuronales_/Reto%2002/diabeticosReto.csv')"
      ],
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9qFxUUDcKb-_",
        "outputId": "7425208e-037e-4729-8766-fa296eda3d5b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        }
      },
      "source": [
        "df.head()"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>6</th>\n",
              "      <th>148</th>\n",
              "      <th>72</th>\n",
              "      <th>1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>85</td>\n",
              "      <td>66</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>183</td>\n",
              "      <td>64</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>89</td>\n",
              "      <td>66</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>137</td>\n",
              "      <td>40</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>116</td>\n",
              "      <td>74</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   6  148  72  1\n",
              "0  1   85  66  0\n",
              "1  8  183  64  1\n",
              "2  1   89  66  0\n",
              "3  0  137  40  1\n",
              "4  5  116  74  0"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "65Ji3_8uKuV0",
        "outputId": "25281180-38e1-4bc4-f25d-ba55327d47ce",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "source": [
        "df['6'].unique()"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 1,  8,  0,  5,  3, 10,  2,  4,  7,  9, 11, 13,  6, 15, 17, 12, 14])"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6nriQNQkJVBt"
      },
      "source": [
        "# Paso 2\n",
        "Genere un breve EDA que incluya:\n",
        "- 3 gráficas de las 3 distintas variables para el reto\n",
        "- Una exploración de la distirbución de las variables, o que ayude a comprender las dimensiones de las 3 variables que está usted por usar para generar su red neuronal"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "scrolled": true,
        "id": "GMu-KnweJVBt",
        "outputId": "c7589134-0684-4efa-e0b5-c4d8639ce24b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        }
      },
      "source": [
        "#9- Variable dummy. haga print de ella\n",
        "df.describe()"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>6</th>\n",
              "      <th>148</th>\n",
              "      <th>72</th>\n",
              "      <th>1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>767.000000</td>\n",
              "      <td>767.000000</td>\n",
              "      <td>767.000000</td>\n",
              "      <td>767.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>3.842243</td>\n",
              "      <td>120.859192</td>\n",
              "      <td>69.101695</td>\n",
              "      <td>0.348110</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>3.370877</td>\n",
              "      <td>31.978468</td>\n",
              "      <td>19.368155</td>\n",
              "      <td>0.476682</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>99.000000</td>\n",
              "      <td>62.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>3.000000</td>\n",
              "      <td>117.000000</td>\n",
              "      <td>72.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>6.000000</td>\n",
              "      <td>140.000000</td>\n",
              "      <td>80.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>17.000000</td>\n",
              "      <td>199.000000</td>\n",
              "      <td>122.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                6         148          72           1\n",
              "count  767.000000  767.000000  767.000000  767.000000\n",
              "mean     3.842243  120.859192   69.101695    0.348110\n",
              "std      3.370877   31.978468   19.368155    0.476682\n",
              "min      0.000000    0.000000    0.000000    0.000000\n",
              "25%      1.000000   99.000000   62.000000    0.000000\n",
              "50%      3.000000  117.000000   72.000000    0.000000\n",
              "75%      6.000000  140.000000   80.000000    1.000000\n",
              "max     17.000000  199.000000  122.000000    1.000000"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1WR3KR36K90U",
        "outputId": "5cb503bc-8f00-4828-89b7-e69b5ed22849",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 354
        }
      },
      "source": [
        "sns.barplot(df['6'], df.groupby('6')['6'].count())"
      ],
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
            "  FutureWarning\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f4941cff110>"
            ]
          },
          "metadata": {},
          "execution_count": 17
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dKgouAbqJVBu",
        "outputId": "7d6f4b30-79ee-49f6-dcee-babab50686fe",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        }
      },
      "source": [
        "sns.histplot(df['148'])"
      ],
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f4941c25e10>"
            ]
          },
          "metadata": {},
          "execution_count": 20
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "c6H6QP_YMBWv",
        "outputId": "1879cade-0a09-4ff6-e059-96cdf5c9e2e2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        }
      },
      "source": [
        "sns.histplot(df['72'])"
      ],
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f4940e878d0>"
            ]
          },
          "metadata": {},
          "execution_count": 21
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1BtSWuOwMJle"
      },
      "source": [
        "df_limpio=df.loc[(df['72']>20) & (df['148']>25)]"
      ],
      "execution_count": 66,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "a9izkA-uM1Y8",
        "outputId": "66bd8645-05f1-4200-911f-f0d715795a0d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        }
      },
      "source": [
        "df_limpio.describe()"
      ],
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>6</th>\n",
              "      <th>148</th>\n",
              "      <th>72</th>\n",
              "      <th>1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>727.000000</td>\n",
              "      <td>727.000000</td>\n",
              "      <td>727.000000</td>\n",
              "      <td>727.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>3.859697</td>\n",
              "      <td>121.837689</td>\n",
              "      <td>72.438790</td>\n",
              "      <td>0.342503</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>3.364801</td>\n",
              "      <td>30.684991</td>\n",
              "      <td>12.394626</td>\n",
              "      <td>0.474874</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>44.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>64.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>3.000000</td>\n",
              "      <td>117.000000</td>\n",
              "      <td>72.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>6.000000</td>\n",
              "      <td>141.000000</td>\n",
              "      <td>80.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>17.000000</td>\n",
              "      <td>199.000000</td>\n",
              "      <td>122.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                6         148          72           1\n",
              "count  727.000000  727.000000  727.000000  727.000000\n",
              "mean     3.859697  121.837689   72.438790    0.342503\n",
              "std      3.364801   30.684991   12.394626    0.474874\n",
              "min      0.000000   44.000000   24.000000    0.000000\n",
              "25%      1.000000  100.000000   64.000000    0.000000\n",
              "50%      3.000000  117.000000   72.000000    0.000000\n",
              "75%      6.000000  141.000000   80.000000    1.000000\n",
              "max     17.000000  199.000000  122.000000    1.000000"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "VaUSehqdJVBv"
      },
      "source": [
        "# (X) serán las variables explicativas y (y) la dicótomica, pero solo usaremos:\n",
        "###  1- Número de embarazos\n",
        "#### 2- Concentración de glucosa en la plasma sanguínea a 2 horas en una prueba oral\n",
        "#### 3- Presión sanguínea diastólica (mm Hg)\n",
        "\n",
        "# Defina aquí debajo sus variables de entrenamiento\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AOKgygySJVBv",
        "outputId": "cd8c7be8-ffac-43bf-f478-ca2308f9da1a",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "source": [
        "X=df_limpio.drop(columns=['1'])\n",
        "Y=df_limpio['1']\n",
        "Y.head()"
      ],
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    0\n",
              "1    1\n",
              "2    0\n",
              "3    1\n",
              "4    0\n",
              "Name: 1, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UKxJOjt6NQ9K",
        "outputId": "6da2673c-d40c-4c57-cd11-8a6b3f19e3c6",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "source": [
        "x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size = 0.3)\n",
        "x_train.shape, x_test.shape"
      ],
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((508, 3), (219, 3))"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "054s_9IRJVBw"
      },
      "source": [
        "# Paso 3\n",
        "Defina al red neuronal con la ayuda de Keras. Recuerde, intento y error."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xlGs7IcwJVBw"
      },
      "source": [
        "# Definamos nuestra red neuronal con Keras\n",
        "\n",
        "red_neuronal = Sequential()\n",
        "red_neuronal.add(Dense(8, input_dim=3, activation=\"relu\"))\n",
        "red_neuronal.add(Dense(15, activation=\"relu\"))\n",
        "red_neuronal.add(Dense(1, activation=\"sigmoid\"))"
      ],
      "execution_count": 77,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dAb9Ce4nJVBx"
      },
      "source": [
        "# Compilar\n",
        "red_neuronal.compile(loss=\"binary_crossentropy\", optimizer=\"adam\", metrics=[\"accuracy\"])"
      ],
      "execution_count": 78,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "scrolled": true,
        "id": "TKkZp0IEJVBx",
        "outputId": "dbd3e6c4-f3b3-4dd6-deeb-5cb76b31537a",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "source": [
        "red_neuronal.fit(x_train,y_train, epochs=150, batch_size= 10, verbose=False)"
      ],
      "execution_count": 82,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f493a920bd0>"
            ]
          },
          "metadata": {},
          "execution_count": 82
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5SGe5SYSJVBx"
      },
      "source": [
        "# Paso 5\n",
        "Evalue la la precisión del modelo"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "q1hEg4shJVBx",
        "outputId": "c05cdaaf-4ae2-402e-852f-6ae92fc42c18",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "source": [
        "\n",
        "# Viendo el accuracy\n",
        "_, accuracy = red_neuronal.evaluate(x_test,y_test)\n",
        "print(\"Accuracy: %.2f\" % (accuracy*100))\n"
      ],
      "execution_count": 81,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "7/7 [==============================] - 0s 2ms/step - loss: 0.5337 - accuracy: 0.7534\n",
            "Accuracy: 75.34\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2k1HLwQAJVBy"
      },
      "source": [
        "# Paso 6\n",
        "Junte todos los pedazos de código y corra el script."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "a3HOyOLmJVBy"
      },
      "source": [
        "# Vamos a Proyectar"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "V7YCc8x4RZlp",
        "outputId": "11df4041-bb53-492e-f142-3fd829e993b4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "source": [
        "New = red_neuronal.predict(x_test)\n",
        "predictions = (New > 0.5).astype(\"int32\")\n",
        "for i in range(len(x_test)):\n",
        "  print(\"X=%s, proba=%s, Predicted=%s, real=%s\" % (x_test.iloc[i], New[i], predictions[i] , y_test.iloc[i]))"
      ],
      "execution_count": 84,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "X=6        2\n",
            "148    110\n",
            "72      74\n",
            "Name: 84, dtype: int64,proba=[0.23336694], Predicted=[0], real=0\n",
            "X=6       2\n",
            "148    89\n",
            "72     90\n",
            "Name: 490, dtype: int64,proba=[0.10440645], Predicted=[0], real=0\n",
            "X=6       4\n",
            "148    91\n",
            "72     70\n",
            "Name: 240, dtype: int64,proba=[0.1921742], Predicted=[0], real=0\n",
            "X=6        1\n",
            "148    101\n",
            "72      50\n",
            "Name: 50, dtype: int64,proba=[0.29478416], Predicted=[0], real=0\n",
            "X=6        4\n",
            "148    125\n",
            "72      80\n",
            "Name: 682, dtype: int64,proba=[0.3520574], Predicted=[0], real=1\n",
            "X=6        4\n",
            "148    137\n",
            "72      84\n",
            "Name: 350, dtype: int64,proba=[0.42021453], Predicted=[0], real=0\n",
            "X=6        0\n",
            "148    188\n",
            "72      82\n",
            "Name: 594, dtype: int64,proba=[0.7924819], Predicted=[1], real=1\n",
            "X=6        2\n",
            "148    102\n",
            "72      86\n",
            "Name: 327, dtype: int64,proba=[0.18434346], Predicted=[0], real=1\n",
            "X=6        8\n",
            "148    124\n",
            "72      76\n",
            "Name: 583, dtype: int64,proba=[0.46140617], Predicted=[0], real=1\n",
            "X=6        4\n",
            "148    147\n",
            "72      74\n",
            "Name: 363, dtype: int64,proba=[0.58477825], Predicted=[1], real=0\n",
            "X=6       10\n",
            "148    129\n",
            "72      62\n",
            "Name: 711, dtype: int64,proba=[0.48373267], Predicted=[0], real=1\n",
            "X=6       10\n",
            "148    162\n",
            "72      84\n",
            "Name: 659, dtype: int64,proba=[0.68816286], Predicted=[1], real=0\n",
            "X=6        4\n",
            "148    189\n",
            "72     110\n",
            "Name: 548, dtype: int64,proba=[0.7035233], Predicted=[1], real=0\n",
            "X=6       1\n",
            "148    86\n",
            "72     66\n",
            "Name: 531, dtype: int64,proba=[0.13252082], Predicted=[0], real=0\n",
            "X=6        3\n",
            "148    126\n",
            "72      88\n",
            "Name: 19, dtype: int64,proba=[0.3198442], Predicted=[0], real=0\n",
            "X=6       6\n",
            "148    87\n",
            "72     80\n",
            "Name: 179, dtype: int64,proba=[0.19985166], Predicted=[0], real=0\n",
            "X=6        1\n",
            "148    100\n",
            "72      66\n",
            "Name: 223, dtype: int64,proba=[0.18107516], Predicted=[0], real=0\n",
            "X=6        5\n",
            "148    126\n",
            "72      78\n",
            "Name: 710, dtype: int64,proba=[0.3879463], Predicted=[0], real=0\n",
            "X=6        1\n",
            "148    122\n",
            "72      90\n",
            "Name: 98, dtype: int64,proba=[0.24955156], Predicted=[0], real=1\n",
            "X=6        0\n",
            "148    135\n",
            "72      94\n",
            "Name: 427, dtype: int64,proba=[0.28911114], Predicted=[0], real=0\n",
            "X=6        5\n",
            "148    158\n",
            "72      84\n",
            "Name: 194, dtype: int64,proba=[0.6551242], Predicted=[1], real=1\n",
            "X=6       4\n",
            "148    95\n",
            "72     60\n",
            "Name: 734, dtype: int64,proba=[0.2212817], Predicted=[0], real=0\n",
            "X=6        2\n",
            "148    141\n",
            "72      58\n",
            "Name: 62, dtype: int64,proba=[0.5374366], Predicted=[1], real=0\n",
            "X=6        5\n",
            "148    108\n",
            "72      72\n",
            "Name: 288, dtype: int64,proba=[0.29149693], Predicted=[0], real=0\n",
            "X=6        1\n",
            "148    131\n",
            "72      64\n",
            "Name: 391, dtype: int64,proba=[0.47455654], Predicted=[0], real=0\n",
            "X=6       5\n",
            "148    99\n",
            "72     54\n",
            "Name: 364, dtype: int64,proba=[0.2938174], Predicted=[0], real=0\n",
            "X=6        3\n",
            "148    111\n",
            "72      56\n",
            "Name: 255, dtype: int64,proba=[0.35578924], Predicted=[0], real=0\n",
            "X=6       3\n",
            "148    78\n",
            "72     50\n",
            "Name: 5, dtype: int64,proba=[0.14825332], Predicted=[0], real=1\n",
            "X=6       10\n",
            "148    125\n",
            "72      70\n",
            "Name: 24, dtype: int64,proba=[0.461561], Predicted=[0], real=1\n",
            "X=6        9\n",
            "148    145\n",
            "72      88\n",
            "Name: 515, dtype: int64,proba=[0.6050861], Predicted=[1], real=1\n",
            "X=6        1\n",
            "148    117\n",
            "72      60\n",
            "Name: 650, dtype: int64,proba=[0.37990615], Predicted=[0], real=0\n",
            "X=6        8\n",
            "148    108\n",
            "72      70\n",
            "Name: 442, dtype: int64,proba=[0.3695774], Predicted=[0], real=1\n",
            "X=6        1\n",
            "148    113\n",
            "72      64\n",
            "Name: 254, dtype: int64,proba=[0.24025095], Predicted=[0], real=1\n",
            "X=6        3\n",
            "148    115\n",
            "72      66\n",
            "Name: 317, dtype: int64,proba=[0.29184455], Predicted=[0], real=0\n",
            "X=6       12\n",
            "148    140\n",
            "72      85\n",
            "Name: 435, dtype: int64,proba=[0.6583489], Predicted=[1], real=0\n",
            "X=6        0\n",
            "148    139\n",
            "72      62\n",
            "Name: 510, dtype: int64,proba=[0.5213942], Predicted=[1], real=0\n",
            "X=6       6\n",
            "148    92\n",
            "72     62\n",
            "Name: 566, dtype: int64,proba=[0.24500847], Predicted=[0], real=0\n",
            "X=6        7\n",
            "148    102\n",
            "72      74\n",
            "Name: 160, dtype: int64,proba=[0.3026811], Predicted=[0], real=0\n",
            "X=6        1\n",
            "148    115\n",
            "72      70\n",
            "Name: 18, dtype: int64,proba=[0.24200317], Predicted=[0], real=1\n",
            "X=6       4\n",
            "148    90\n",
            "72     88\n",
            "Name: 624, dtype: int64,proba=[0.15465817], Predicted=[0], real=0\n",
            "X=6       3\n",
            "148    88\n",
            "72     58\n",
            "Name: 31, dtype: int64,proba=[0.17625785], Predicted=[0], real=0\n",
            "X=6       2\n",
            "148    99\n",
            "72     70\n",
            "Name: 202, dtype: int64,proba=[0.18983251], Predicted=[0], real=0\n",
            "X=6        0\n",
            "148    104\n",
            "72      64\n",
            "Name: 447, dtype: int64,proba=[0.18209162], Predicted=[0], real=1\n",
            "X=6       1\n",
            "148    99\n",
            "72     72\n",
            "Name: 565, dtype: int64,proba=[0.17097384], Predicted=[0], real=0\n",
            "X=6        5\n",
            "148    136\n",
            "72      82\n",
            "Name: 683, dtype: int64,proba=[0.4450571], Predicted=[0], real=0\n",
            "X=6        2\n",
            "148    112\n",
            "72      66\n",
            "Name: 78, dtype: int64,proba=[0.25371313], Predicted=[0], real=0\n",
            "X=6        4\n",
            "148    197\n",
            "72      70\n",
            "Name: 227, dtype: int64,proba=[0.83037984], Predicted=[1], real=0\n",
            "X=6       4\n",
            "148    84\n",
            "72     90\n",
            "Name: 542, dtype: int64,proba=[0.07823575], Predicted=[0], real=0\n",
            "X=6        5\n",
            "148    114\n",
            "72      74\n",
            "Name: 277, dtype: int64,proba=[0.32211515], Predicted=[0], real=0\n",
            "X=6        7\n",
            "148    129\n",
            "72      68\n",
            "Name: 692, dtype: int64,proba=[0.47836328], Predicted=[0], real=1\n",
            "X=6        0\n",
            "148    165\n",
            "72      90\n",
            "Name: 246, dtype: int64,proba=[0.4803845], Predicted=[0], real=0\n",
            "X=6        1\n",
            "148    140\n",
            "72      74\n",
            "Name: 687, dtype: int64,proba=[0.43685526], Predicted=[0], real=0\n",
            "X=6        0\n",
            "148    179\n",
            "72      50\n",
            "Name: 646, dtype: int64,proba=[0.7446128], Predicted=[1], real=1\n",
            "X=6        5\n",
            "148    168\n",
            "72      64\n",
            "Name: 403, dtype: int64,proba=[0.70350826], Predicted=[1], real=1\n",
            "X=6        3\n",
            "148    174\n",
            "72      58\n",
            "Name: 610, dtype: int64,proba=[0.728289], Predicted=[1], real=1\n",
            "X=6        1\n",
            "148    116\n",
            "72      70\n",
            "Name: 549, dtype: int64,proba=[0.24688116], Predicted=[0], real=0\n",
            "X=6        1\n",
            "148    144\n",
            "72      82\n",
            "Name: 469, dtype: int64,proba=[0.3864475], Predicted=[0], real=0\n",
            "X=6       0\n",
            "148    93\n",
            "72     60\n",
            "Name: 676, dtype: int64,proba=[0.14629716], Predicted=[0], real=0\n",
            "X=6        6\n",
            "148    144\n",
            "72      72\n",
            "Name: 94, dtype: int64,proba=[0.5706394], Predicted=[1], real=0\n",
            "X=6       7\n",
            "148    83\n",
            "72     78\n",
            "Name: 81, dtype: int64,proba=[0.20339179], Predicted=[0], real=0\n",
            "X=6        0\n",
            "148    162\n",
            "72      76\n",
            "Name: 119, dtype: int64,proba=[0.6639217], Predicted=[1], real=1\n",
            "X=6       6\n",
            "148    80\n",
            "72     80\n",
            "Name: 704, dtype: int64,proba=[0.15767685], Predicted=[0], real=0\n",
            "X=6        8\n",
            "148    118\n",
            "72      72\n",
            "Name: 329, dtype: int64,proba=[0.42939422], Predicted=[0], real=0\n",
            "X=6        9\n",
            "148    123\n",
            "72      70\n",
            "Name: 190, dtype: int64,proba=[0.4546044], Predicted=[0], real=0\n",
            "X=6        3\n",
            "148    170\n",
            "72      64\n",
            "Name: 131, dtype: int64,proba=[0.70975685], Predicted=[1], real=1\n",
            "X=6        0\n",
            "148    105\n",
            "72      90\n",
            "Name: 535, dtype: int64,proba=[0.15932736], Predicted=[0], real=0\n",
            "X=6       0\n",
            "148    93\n",
            "72     60\n",
            "Name: 136, dtype: int64,proba=[0.14629716], Predicted=[0], real=0\n",
            "X=6        9\n",
            "148    112\n",
            "72      82\n",
            "Name: 617, dtype: int64,proba=[0.40091518], Predicted=[0], real=1\n",
            "X=6        0\n",
            "148    108\n",
            "72      68\n",
            "Name: 201, dtype: int64,proba=[0.19381267], Predicted=[0], real=0\n",
            "X=6        0\n",
            "148    124\n",
            "72      70\n",
            "Name: 321, dtype: int64,proba=[0.2655645], Predicted=[0], real=1\n",
            "X=6       1\n",
            "148    79\n",
            "72     60\n",
            "Name: 172, dtype: int64,proba=[0.11706844], Predicted=[0], real=0\n",
            "X=6        0\n",
            "148    114\n",
            "72      80\n",
            "Name: 161, dtype: int64,proba=[0.20530713], Predicted=[0], real=0\n",
            "X=6        1\n",
            "148    173\n",
            "72      74\n",
            "Name: 597, dtype: int64,proba=[0.7237851], Predicted=[1], real=1\n",
            "X=6        1\n",
            "148    100\n",
            "72      72\n",
            "Name: 445, dtype: int64,proba=[0.17475024], Predicted=[0], real=0\n",
            "X=6        2\n",
            "148    129\n",
            "72      74\n",
            "Name: 684, dtype: int64,proba=[0.33457547], Predicted=[0], real=0\n",
            "X=6       1\n",
            "148    87\n",
            "72     78\n",
            "Name: 224, dtype: int64,proba=[0.12576461], Predicted=[0], real=0\n",
            "X=6        2\n",
            "148    105\n",
            "72      58\n",
            "Name: 372, dtype: int64,proba=[0.23038709], Predicted=[0], real=0\n",
            "X=6        1\n",
            "148    143\n",
            "72      74\n",
            "Name: 412, dtype: int64,proba=[0.5323864], Predicted=[1], real=0\n",
            "X=6        7\n",
            "148    106\n",
            "72      92\n",
            "Name: 41, dtype: int64,proba=[0.2976192], Predicted=[0], real=0\n",
            "X=6       13\n",
            "148    158\n",
            "72     114\n",
            "Name: 690, dtype: int64,proba=[0.73799175], Predicted=[1], real=1\n",
            "X=6        1\n",
            "148    118\n",
            "72      58\n",
            "Name: 126, dtype: int64,proba=[0.3927878], Predicted=[0], real=0\n",
            "X=6        2\n",
            "148    106\n",
            "72      56\n",
            "Name: 732, dtype: int64,proba=[0.28734177], Predicted=[0], real=0\n",
            "X=6        1\n",
            "148    124\n",
            "72      60\n",
            "Name: 604, dtype: int64,proba=[0.4298057], Predicted=[0], real=0\n",
            "X=6        0\n",
            "148    137\n",
            "72      68\n",
            "Name: 306, dtype: int64,proba=[0.5109814], Predicted=[1], real=0\n",
            "X=6        4\n",
            "148    136\n",
            "72      70\n",
            "Name: 749, dtype: int64,proba=[0.515375], Predicted=[1], real=1\n",
            "X=6        2\n",
            "148    144\n",
            "72      58\n",
            "Name: 300, dtype: int64,proba=[0.55604285], Predicted=[1], real=1\n",
            "X=6       3\n",
            "148    84\n",
            "72     72\n",
            "Name: 500, dtype: int64,proba=[0.14824], Predicted=[0], real=0\n",
            "X=6       1\n",
            "148    93\n",
            "72     56\n",
            "Name: 584, dtype: int64,proba=[0.16494527], Predicted=[0], real=0\n",
            "X=6        1\n",
            "148    128\n",
            "72      98\n",
            "Name: 186, dtype: int64,proba=[0.26890254], Predicted=[0], real=1\n",
            "X=6        0\n",
            "148    100\n",
            "72      70\n",
            "Name: 135, dtype: int64,proba=[0.16095501], Predicted=[0], real=0\n",
            "X=6        8\n",
            "148    143\n",
            "72      66\n",
            "Name: 585, dtype: int64,proba=[0.5673339], Predicted=[1], real=1\n",
            "X=6        9\n",
            "148    152\n",
            "72      78\n",
            "Name: 337, dtype: int64,proba=[0.6278328], Predicted=[1], real=1\n",
            "X=6       1\n",
            "148    90\n",
            "72     68\n",
            "Name: 433, dtype: int64,proba=[0.1433649], Predicted=[0], real=0\n",
            "X=6       10\n",
            "148    122\n",
            "72      68\n",
            "Name: 245, dtype: int64,proba=[0.44227463], Predicted=[0], real=0\n",
            "X=6       0\n",
            "148    67\n",
            "72     76\n",
            "Name: 595, dtype: int64,proba=[0.02649614], Predicted=[0], real=0\n",
            "X=6       1\n",
            "148    97\n",
            "72     66\n",
            "Name: 26, dtype: int64,proba=[0.16962084], Predicted=[0], real=0\n",
            "X=6        5\n",
            "148    166\n",
            "72      76\n",
            "Name: 390, dtype: int64,proba=[0.6965084], Predicted=[1], real=1\n",
            "X=6       2\n",
            "148    94\n",
            "72     68\n",
            "Name: 420, dtype: int64,proba=[0.17239553], Predicted=[0], real=0\n",
            "X=6        1\n",
            "148    164\n",
            "72      82\n",
            "Name: 547, dtype: int64,proba=[0.67900443], Predicted=[1], real=0\n",
            "X=6        4\n",
            "148    123\n",
            "72      62\n",
            "Name: 263, dtype: int64,proba=[0.43167675], Predicted=[0], real=1\n",
            "X=6       10\n",
            "148    122\n",
            "72      78\n",
            "Name: 33, dtype: int64,proba=[0.5011325], Predicted=[1], real=0\n",
            "X=6       1\n",
            "148    73\n",
            "72     50\n",
            "Name: 54, dtype: int64,proba=[0.10842988], Predicted=[0], real=0\n",
            "X=6        8\n",
            "148    120\n",
            "72      86\n",
            "Name: 730, dtype: int64,proba=[0.41765326], Predicted=[0], real=1\n",
            "X=6       5\n",
            "148    78\n",
            "72     48\n",
            "Name: 116, dtype: int64,proba=[0.18131003], Predicted=[0], real=0\n",
            "X=6        0\n",
            "148    180\n",
            "72      90\n",
            "Name: 505, dtype: int64,proba=[0.75966877], Predicted=[1], real=1\n",
            "X=6        2\n",
            "148    111\n",
            "72      60\n",
            "Name: 631, dtype: int64,proba=[0.26079088], Predicted=[0], real=0\n",
            "X=6       3\n",
            "148    96\n",
            "72     56\n",
            "Name: 395, dtype: int64,proba=[0.21145222], Predicted=[0], real=0\n",
            "X=6        6\n",
            "148    195\n",
            "72      70\n",
            "Name: 674, dtype: int64,proba=[0.8260915], Predicted=[1], real=1\n",
            "X=6       11\n",
            "148    120\n",
            "72      80\n",
            "Name: 739, dtype: int64,proba=[0.51262605], Predicted=[1], real=1\n",
            "X=6       17\n",
            "148    163\n",
            "72      72\n",
            "Name: 158, dtype: int64,proba=[0.70465213], Predicted=[1], real=1\n",
            "X=6       2\n",
            "148    71\n",
            "72     70\n",
            "Name: 46, dtype: int64,proba=[0.09310243], Predicted=[0], real=0\n",
            "X=6        6\n",
            "148    190\n",
            "72      92\n",
            "Name: 758, dtype: int64,proba=[0.81209683], Predicted=[1], real=1\n",
            "X=6        9\n",
            "148    164\n",
            "72      78\n",
            "Name: 707, dtype: int64,proba=[0.69493306], Predicted=[1], real=1\n",
            "X=6        8\n",
            "148    179\n",
            "72      72\n",
            "Name: 174, dtype: int64,proba=[0.7650207], Predicted=[1], real=1\n",
            "X=6        4\n",
            "148    184\n",
            "72      78\n",
            "Name: 424, dtype: int64,proba=[0.7814417], Predicted=[1], real=1\n",
            "X=6        2\n",
            "148    115\n",
            "72      64\n",
            "Name: 422, dtype: int64,proba=[0.2718507], Predicted=[0], real=0\n",
            "X=6        2\n",
            "148    146\n",
            "72      76\n",
            "Name: 243, dtype: int64,proba=[0.57450694], Predicted=[1], real=0\n",
            "X=6        1\n",
            "148    128\n",
            "72      48\n",
            "Name: 292, dtype: int64,proba=[0.4503514], Predicted=[0], real=1\n",
            "X=6       10\n",
            "148    168\n",
            "72      74\n",
            "Name: 10, dtype: int64,proba=[0.71662545], Predicted=[1], real=1\n",
            "X=6       3\n",
            "148    78\n",
            "72     70\n",
            "Name: 569, dtype: int64,proba=[0.1309562], Predicted=[0], real=0\n",
            "X=6        9\n",
            "148    184\n",
            "72      85\n",
            "Name: 244, dtype: int64,proba=[0.7914405], Predicted=[1], real=1\n",
            "X=6        0\n",
            "148    107\n",
            "72      76\n",
            "Name: 530, dtype: int64,proba=[0.18101257], Predicted=[0], real=0\n",
            "X=6        0\n",
            "148    107\n",
            "72      60\n",
            "Name: 648, dtype: int64,proba=[0.19874278], Predicted=[0], real=0\n",
            "X=6       13\n",
            "148    106\n",
            "72      72\n",
            "Name: 85, dtype: int64,proba=[0.491216], Predicted=[0], real=0\n",
            "X=6       12\n",
            "148    121\n",
            "72      78\n",
            "Name: 581, dtype: int64,proba=[0.55096465], Predicted=[1], real=0\n",
            "X=6       7\n",
            "148    62\n",
            "72     78\n",
            "Name: 75, dtype: int64,proba=[0.00977781], Predicted=[0], real=0\n",
            "X=6        3\n",
            "148    124\n",
            "72      80\n",
            "Name: 520, dtype: int64,proba=[0.32089835], Predicted=[0], real=0\n",
            "X=6       8\n",
            "148    84\n",
            "72     74\n",
            "Name: 132, dtype: int64,proba=[0.23205271], Predicted=[0], real=0\n",
            "X=6        1\n",
            "148    119\n",
            "72      44\n",
            "Name: 574, dtype: int64,proba=[0.39410424], Predicted=[0], real=0\n",
            "X=6        0\n",
            "148    152\n",
            "72      82\n",
            "Name: 607, dtype: int64,proba=[0.40994367], Predicted=[0], real=0\n",
            "X=6        3\n",
            "148    107\n",
            "72      62\n",
            "Name: 196, dtype: int64,proba=[0.25561082], Predicted=[0], real=1\n",
            "X=6        4\n",
            "148    142\n",
            "72      86\n",
            "Name: 229, dtype: int64,proba=[0.44911447], Predicted=[0], real=1\n",
            "X=6        2\n",
            "148    100\n",
            "72      54\n",
            "Name: 453, dtype: int64,proba=[0.21599391], Predicted=[0], real=0\n",
            "X=6        5\n",
            "148    117\n",
            "72      86\n",
            "Name: 722, dtype: int64,proba=[0.3205319], Predicted=[0], real=0\n",
            "X=6       1\n",
            "148    89\n",
            "72     76\n",
            "Name: 111, dtype: int64,proba=[0.13334543], Predicted=[0], real=0\n",
            "X=6        3\n",
            "148    171\n",
            "72      72\n",
            "Name: 109, dtype: int64,proba=[0.71715295], Predicted=[1], real=1\n",
            "X=6       1\n",
            "148    88\n",
            "72     30\n",
            "Name: 124, dtype: int64,proba=[0.22696644], Predicted=[0], real=1\n",
            "X=6        1\n",
            "148    172\n",
            "72      68\n",
            "Name: 408, dtype: int64,proba=[0.71705955], Predicted=[1], real=1\n",
            "X=6        1\n",
            "148    100\n",
            "72      66\n",
            "Name: 389, dtype: int64,proba=[0.18107516], Predicted=[0], real=0\n",
            "X=6       6\n",
            "148    92\n",
            "72     92\n",
            "Name: 32, dtype: int64,proba=[0.18406868], Predicted=[0], real=0\n",
            "X=6        2\n",
            "148    122\n",
            "72      60\n",
            "Name: 529, dtype: int64,proba=[0.4200067], Predicted=[0], real=0\n",
            "X=6        1\n",
            "148    109\n",
            "72      56\n",
            "Name: 156, dtype: int64,proba=[0.32298762], Predicted=[0], real=0\n",
            "X=6        1\n",
            "148    149\n",
            "72      68\n",
            "Name: 721, dtype: int64,proba=[0.5876467], Predicted=[1], real=1\n",
            "X=6       2\n",
            "148    81\n",
            "72     72\n",
            "Name: 496, dtype: int64,proba=[0.12554502], Predicted=[0], real=0\n",
            "X=6        1\n",
            "148    111\n",
            "72      86\n",
            "Name: 248, dtype: int64,proba=[0.20380047], Predicted=[0], real=0\n",
            "X=6        0\n",
            "148    180\n",
            "72      66\n",
            "Name: 44, dtype: int64,proba=[0.75350875], Predicted=[1], real=1\n",
            "X=6        4\n",
            "148    151\n",
            "72      90\n",
            "Name: 159, dtype: int64,proba=[0.5011575], Predicted=[1], real=0\n",
            "X=6        0\n",
            "148    121\n",
            "72      66\n",
            "Name: 568, dtype: int64,proba=[0.2558506], Predicted=[0], real=1\n",
            "X=6        0\n",
            "148    125\n",
            "72      68\n",
            "Name: 625, dtype: int64,proba=[0.27360368], Predicted=[0], real=0\n",
            "X=6       6\n",
            "148    99\n",
            "72     60\n",
            "Name: 562, dtype: int64,proba=[0.28371435], Predicted=[0], real=0\n",
            "X=6       1\n",
            "148    82\n",
            "72     64\n",
            "Name: 449, dtype: int64,proba=[0.12237978], Predicted=[0], real=0\n",
            "X=6       4\n",
            "148    99\n",
            "72     72\n",
            "Name: 487, dtype: int64,proba=[0.22459927], Predicted=[0], real=0\n",
            "X=6        4\n",
            "148    116\n",
            "72      72\n",
            "Name: 392, dtype: int64,proba=[0.31215733], Predicted=[0], real=0\n",
            "X=6        4\n",
            "148    171\n",
            "72      72\n",
            "Name: 234, dtype: int64,proba=[0.71916854], Predicted=[1], real=1\n",
            "X=6        1\n",
            "148    120\n",
            "72      80\n",
            "Name: 656, dtype: int64,proba=[0.25317538], Predicted=[0], real=0\n",
            "X=6        0\n",
            "148    135\n",
            "72      68\n",
            "Name: 484, dtype: int64,proba=[0.49846843], Predicted=[0], real=1\n",
            "X=6        5\n",
            "148    124\n",
            "72      74\n",
            "Name: 115, dtype: int64,proba=[0.3822651], Predicted=[0], real=1\n",
            "X=6        1\n",
            "148    138\n",
            "72      82\n",
            "Name: 200, dtype: int64,proba=[0.34961218], Predicted=[0], real=0\n",
            "X=6        6\n",
            "148    154\n",
            "72      74\n",
            "Name: 498, dtype: int64,proba=[0.6312402], Predicted=[1], real=0\n",
            "X=6       2\n",
            "148    81\n",
            "72     60\n",
            "Name: 209, dtype: int64,proba=[0.13535264], Predicted=[0], real=0\n",
            "X=6       0\n",
            "148    95\n",
            "72     64\n",
            "Name: 681, dtype: int64,proba=[0.14931926], Predicted=[0], real=0\n",
            "X=6        3\n",
            "148    187\n",
            "72      70\n",
            "Name: 747, dtype: int64,proba=[0.79052085], Predicted=[1], real=1\n",
            "X=6       8\n",
            "148    74\n",
            "72     70\n",
            "Name: 461, dtype: int64,proba=[0.19277984], Predicted=[0], real=0\n",
            "X=6       1\n",
            "148    90\n",
            "72     62\n",
            "Name: 382, dtype: int64,proba=[0.14875874], Predicted=[0], real=0\n",
            "X=6       10\n",
            "148    161\n",
            "72      68\n",
            "Name: 305, dtype: int64,proba=[0.67791677], Predicted=[1], real=1\n",
            "X=6        2\n",
            "148    101\n",
            "72      58\n",
            "Name: 678, dtype: int64,proba=[0.21218985], Predicted=[0], real=0\n",
            "X=6       1\n",
            "148    89\n",
            "72     24\n",
            "Name: 596, dtype: int64,proba=[0.2299039], Predicted=[0], real=0\n",
            "X=6        8\n",
            "148    176\n",
            "72      90\n",
            "Name: 52, dtype: int64,proba=[0.75591373], Predicted=[1], real=1\n",
            "X=6        0\n",
            "148    126\n",
            "72      84\n",
            "Name: 296, dtype: int64,proba=[0.25629136], Predicted=[0], real=0\n",
            "X=6       7\n",
            "148    97\n",
            "72     76\n",
            "Name: 637, dtype: int64,proba=[0.2726853], Predicted=[0], real=1\n",
            "X=6        6\n",
            "148    162\n",
            "72      62\n",
            "Name: 748, dtype: int64,proba=[0.67283875], Predicted=[1], real=1\n",
            "X=6        2\n",
            "148    114\n",
            "72      68\n",
            "Name: 256, dtype: int64,proba=[0.26105398], Predicted=[0], real=0\n",
            "X=6       2\n",
            "148    90\n",
            "72     70\n",
            "Name: 148, dtype: int64,proba=[0.15593249], Predicted=[0], real=0\n",
            "X=6        1\n",
            "148    119\n",
            "72      86\n",
            "Name: 286, dtype: int64,proba=[0.2402316], Predicted=[0], real=1\n",
            "X=6      10\n",
            "148    90\n",
            "72     85\n",
            "Name: 541, dtype: int64,proba=[0.2908786], Predicted=[0], real=1\n",
            "X=6        5\n",
            "148    143\n",
            "72      78\n",
            "Name: 177, dtype: int64,proba=[0.55438095], Predicted=[1], real=0\n",
            "X=6        7\n",
            "148    181\n",
            "72      84\n",
            "Name: 235, dtype: int64,proba=[0.7750824], Predicted=[1], real=1\n",
            "X=6       3\n",
            "148    87\n",
            "72     60\n",
            "Name: 524, dtype: int64,proba=[0.17040813], Predicted=[0], real=0\n",
            "X=6       0\n",
            "148    95\n",
            "72     80\n",
            "Name: 446, dtype: int64,proba=[0.13525397], Predicted=[0], real=0\n",
            "X=6        1\n",
            "148    125\n",
            "72      70\n",
            "Name: 383, dtype: int64,proba=[0.2936742], Predicted=[0], real=0\n",
            "X=6        3\n",
            "148    173\n",
            "72      82\n",
            "Name: 369, dtype: int64,proba=[0.7299522], Predicted=[1], real=1\n",
            "X=6       1\n",
            "148    83\n",
            "72     68\n",
            "Name: 417, dtype: int64,proba=[0.12212005], Predicted=[0], real=0\n",
            "X=6        5\n",
            "148    121\n",
            "72      72\n",
            "Name: 764, dtype: int64,proba=[0.36707985], Predicted=[0], real=0\n",
            "X=6        1\n",
            "148    106\n",
            "72      70\n",
            "Name: 653, dtype: int64,proba=[0.20109916], Predicted=[0], real=0\n",
            "X=6        8\n",
            "148    181\n",
            "72      68\n",
            "Name: 185, dtype: int64,proba=[0.772923], Predicted=[1], real=1\n",
            "X=6       0\n",
            "148    57\n",
            "72     60\n",
            "Name: 536, dtype: int64,proba=[0.05330193], Predicted=[0], real=0\n",
            "X=6       4\n",
            "148    95\n",
            "72     70\n",
            "Name: 261, dtype: int64,proba=[0.20911062], Predicted=[0], real=0\n",
            "X=6        4\n",
            "148    125\n",
            "72      70\n",
            "Name: 492, dtype: int64,proba=[0.36867], Predicted=[0], real=1\n",
            "X=6        0\n",
            "148    123\n",
            "72      88\n",
            "Name: 480, dtype: int64,proba=[0.2362403], Predicted=[0], real=0\n",
            "X=6       6\n",
            "148    98\n",
            "72     58\n",
            "Name: 667, dtype: int64,proba=[0.28128287], Predicted=[0], real=0\n",
            "X=6        0\n",
            "148    173\n",
            "72      78\n",
            "Name: 486, dtype: int64,proba=[0.722908], Predicted=[1], real=0\n",
            "X=6        2\n",
            "148    123\n",
            "72      48\n",
            "Name: 404, dtype: int64,proba=[0.42203102], Predicted=[0], real=0\n",
            "X=6       1\n",
            "148    99\n",
            "72     58\n",
            "Name: 670, dtype: int64,proba=[0.18575594], Predicted=[0], real=0\n",
            "X=6       2\n",
            "148    75\n",
            "72     64\n",
            "Name: 173, dtype: int64,proba=[0.1148892], Predicted=[0], real=0\n",
            "X=6        2\n",
            "148    121\n",
            "72      70\n",
            "Name: 691, dtype: int64,proba=[0.29524836], Predicted=[0], real=0\n",
            "X=6        1\n",
            "148    126\n",
            "72      56\n",
            "Name: 104, dtype: int64,proba=[0.44073993], Predicted=[0], real=0\n",
            "X=6        1\n",
            "148    112\n",
            "72      72\n",
            "Name: 410, dtype: int64,proba=[0.22524095], Predicted=[0], real=0\n",
            "X=6       9\n",
            "148    57\n",
            "72     80\n",
            "Name: 145, dtype: int64,proba=[0.00269032], Predicted=[0], real=0\n",
            "X=6       2\n",
            "148    90\n",
            "72     60\n",
            "Name: 693, dtype: int64,proba=[0.16565675], Predicted=[0], real=0\n",
            "X=6        7\n",
            "148    178\n",
            "72      84\n",
            "Name: 338, dtype: int64,proba=[0.76172245], Predicted=[1], real=1\n",
            "X=6        9\n",
            "148    164\n",
            "72      84\n",
            "Name: 237, dtype: int64,proba=[0.6967031], Predicted=[1], real=1\n",
            "X=6       1\n",
            "148    95\n",
            "72     66\n",
            "Name: 67, dtype: int64,proba=[0.1623098], Predicted=[0], real=0\n",
            "X=6       11\n",
            "148    136\n",
            "72      84\n",
            "Name: 647, dtype: int64,proba=[0.609278], Predicted=[1], real=1\n",
            "X=6        8\n",
            "148    112\n",
            "72      72\n",
            "Name: 298, dtype: int64,proba=[0.39107472], Predicted=[0], real=0\n",
            "X=6        1\n",
            "148    143\n",
            "72      86\n",
            "Name: 573, dtype: int64,proba=[0.37343356], Predicted=[0], real=0\n",
            "X=6        7\n",
            "148    107\n",
            "72      74\n",
            "Name: 16, dtype: int64,proba=[0.33125785], Predicted=[0], real=1\n",
            "X=6        4\n",
            "148    128\n",
            "72      70\n",
            "Name: 640, dtype: int64,proba=[0.40868858], Predicted=[0], real=0\n",
            "X=6        9\n",
            "148    112\n",
            "72      82\n",
            "Name: 213, dtype: int64,proba=[0.40091518], Predicted=[0], real=1\n",
            "X=6        5\n",
            "148    109\n",
            "72      62\n",
            "Name: 215, dtype: int64,proba=[0.31224787], Predicted=[0], real=1\n",
            "X=6       1\n",
            "148    92\n",
            "72     62\n",
            "Name: 606, dtype: int64,proba=[0.1555726], Predicted=[0], real=0\n",
            "X=6        3\n",
            "148    121\n",
            "72      52\n",
            "Name: 677, dtype: int64,proba=[0.41363263], Predicted=[0], real=1\n",
            "X=6       1\n",
            "148    88\n",
            "72     62\n",
            "Name: 552, dtype: int64,proba=[0.14219284], Predicted=[0], real=0\n",
            "X=6       3\n",
            "148    82\n",
            "72     70\n",
            "Name: 397, dtype: int64,proba=[0.14345556], Predicted=[0], real=0\n",
            "X=6        5\n",
            "148    130\n",
            "72      82\n",
            "Name: 178, dtype: int64,proba=[0.40633526], Predicted=[0], real=1\n",
            "X=6        1\n",
            "148    168\n",
            "72      88\n",
            "Name: 701, dtype: int64,proba=[0.65056276], Predicted=[1], real=1\n",
            "X=6      12\n",
            "148    92\n",
            "72     62\n",
            "Name: 253, dtype: int64,proba=[0.39029893], Predicted=[0], real=1\n",
            "X=6        2\n",
            "148    100\n",
            "72      66\n",
            "Name: 69, dtype: int64,proba=[0.19847488], Predicted=[0], real=1\n",
            "X=6        7\n",
            "148    161\n",
            "72      86\n",
            "Name: 282, dtype: int64,proba=[0.6768715], Predicted=[1], real=1\n",
            "X=6        7\n",
            "148    196\n",
            "72      90\n",
            "Name: 21, dtype: int64,proba=[0.8349384], Predicted=[1], real=1\n"
          ]
        }
      ]
    }
  ]
}